openapi: 3.0.0
info:
  title: TS Seed API
  description: Typescript + Seed API Project
  version: 1.0.0
servers:
  - url: 'https://ts-seed-api.com'
    description: Main production server
  - url: 'https://ts-seed-api-staging.com'
    description: Internal staging server
paths:
  '/{lang}/sample/auth':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    post:
      tags:
        - Sample
      summary: Authenticate a user
      requestBody:
        $ref: '#/components/requestBodies/DefaultAuthenticate'
      responses:
        '200':
          description: A JSON object with data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/GetUserResponse'
                  token:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  '/{lang}/sample':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    get:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get a success message
      responses:
        '200':
          description: A JSON object with data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    lastname:
                      type: string
    post:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get a success post message
      responses:
        '201':
          description: A JSON object with data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  '/{lang}/sample/logged':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    get:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get a specific details for the logged user
      responses:
        '200':
          description: A JSON object with data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/GetUserResponse'
  '/{lang}/sample/error':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    get:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get an error message
      responses:
        '500':
          $ref: '#/components/responses/InternalError'
  '/{lang}/sample/error-not-found':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    get:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get an error message
      responses:
        '404':
          $ref: '#/components/responses/NotFound'
  '/{lang}/sample/bad-request':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    get:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get an error message
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
  '/{lang}/sample/resource-not-created':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
    get:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get an error message
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
  '/{lang}/sample/{id}':
    parameters:
      - $ref: '#/components/parameters/DefaultLangPath'
      - $ref: '#/components/parameters/DefaultIDPath'
    put:
      tags:
        - Sample
      security:
        - BearerAuth: []
      summary: Get success message for PUT
      responses:
        '200':
          $ref: '#/components/responses/GenericSucces'
tags:
  - name: Sample
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  responses:
    GenericSucces:
      description: A message saying everything went well
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BodyGeneral'
    BadRequest:
      description: A message with the details of the bad parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BodyGeneral'
    Unauthorized:
      description: A message requesting a JWT token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BodyGeneral'
    NotFound:
      description: A message with the details of the item(s) not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BodyGeneral'
    Duplicated:
      description: A message describing the duplicated item in DB
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BodyGeneral'
    InternalError:
      description: A message with a generic message
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BodyGeneral'
  parameters:
    DefaultLangPath:
      in: path
      name: lang
      required: true
      schema:
        type: string
        enum:
          - en
      description: Default lang parameters
    DefaultIDPath:
      in: path
      name: id
      required: true
      schema:
        type: string
      description: ID of a resource
  requestBodies:
    DefaultAuthenticate:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
  schemas:
    BodyGeneral:
      type: object
      properties:
        message:
          type: string
    GetUserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        role:
          type: string
